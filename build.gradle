plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//Valid 설정 유효성 검사 JAVA 표준스펙
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Security 설정 비밀번호 암호화
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	runtimeOnly 'com.mysql:mysql-connector-j'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// 자바 코드 Getter , Setter 기능을 간략화 하게 사용 가능한 기능
	compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 서버 새로고침없이 사이트 재시작시 코드 적용 가능한 기능
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
}


tasks.named('test') {
	useJUnitPlatform()
}
